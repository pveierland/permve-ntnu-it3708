Trivial (44):
(<Entity.FOOD: 2>, <Entity.OPEN: 0>, <Entity.OPEN: 0>)
(<Entity.FOOD: 2>, <Entity.OPEN: 0>, <Entity.POISON: 3>)
(<Entity.FOOD: 2>, <Entity.OPEN: 0>, <Entity.WALL: 1>)
(<Entity.FOOD: 2>, <Entity.POISON: 3>, <Entity.OPEN: 0>)
(<Entity.FOOD: 2>, <Entity.POISON: 3>, <Entity.POISON: 3>)
(<Entity.FOOD: 2>, <Entity.POISON: 3>, <Entity.WALL: 1>)
(<Entity.FOOD: 2>, <Entity.WALL: 1>, <Entity.OPEN: 0>)
(<Entity.FOOD: 2>, <Entity.WALL: 1>, <Entity.POISON: 3>)
(<Entity.FOOD: 2>, <Entity.WALL: 1>, <Entity.WALL: 1>)
(<Entity.OPEN: 0>, <Entity.FOOD: 2>, <Entity.OPEN: 0>)
(<Entity.OPEN: 0>, <Entity.FOOD: 2>, <Entity.POISON: 3>)
(<Entity.OPEN: 0>, <Entity.OPEN: 0>, <Entity.FOOD: 2>)
(<Entity.OPEN: 0>, <Entity.OPEN: 0>, <Entity.WALL: 1>)
(<Entity.OPEN: 0>, <Entity.POISON: 3>, <Entity.FOOD: 2>)
(<Entity.OPEN: 0>, <Entity.POISON: 3>, <Entity.POISON: 3>)
(<Entity.OPEN: 0>, <Entity.POISON: 3>, <Entity.WALL: 1>)
(<Entity.OPEN: 0>, <Entity.WALL: 1>, <Entity.FOOD: 2>)
(<Entity.OPEN: 0>, <Entity.WALL: 1>, <Entity.POISON: 3>)
(<Entity.OPEN: 0>, <Entity.WALL: 1>, <Entity.WALL: 1>)
(<Entity.POISON: 3>, <Entity.FOOD: 2>, <Entity.OPEN: 0>)
(<Entity.POISON: 3>, <Entity.FOOD: 2>, <Entity.POISON: 3>)
(<Entity.POISON: 3>, <Entity.FOOD: 2>, <Entity.WALL: 1>)
(<Entity.POISON: 3>, <Entity.OPEN: 0>, <Entity.FOOD: 2>)
(<Entity.POISON: 3>, <Entity.OPEN: 0>, <Entity.POISON: 3>)
(<Entity.POISON: 3>, <Entity.OPEN: 0>, <Entity.WALL: 1>)
(<Entity.POISON: 3>, <Entity.POISON: 3>, <Entity.FOOD: 2>)
(<Entity.POISON: 3>, <Entity.POISON: 3>, <Entity.OPEN: 0>)
(<Entity.POISON: 3>, <Entity.POISON: 3>, <Entity.WALL: 1>)
(<Entity.POISON: 3>, <Entity.WALL: 1>, <Entity.FOOD: 2>)
(<Entity.POISON: 3>, <Entity.WALL: 1>, <Entity.OPEN: 0>)
(<Entity.POISON: 3>, <Entity.WALL: 1>, <Entity.WALL: 1>)
(<Entity.WALL: 1>, <Entity.FOOD: 2>, <Entity.POISON: 3>)
(<Entity.WALL: 1>, <Entity.FOOD: 2>, <Entity.WALL: 1>)
(<Entity.WALL: 1>, <Entity.OPEN: 0>, <Entity.FOOD: 2>)
(<Entity.WALL: 1>, <Entity.OPEN: 0>, <Entity.OPEN: 0>)
(<Entity.WALL: 1>, <Entity.OPEN: 0>, <Entity.POISON: 3>)
(<Entity.WALL: 1>, <Entity.OPEN: 0>, <Entity.WALL: 1>)
(<Entity.WALL: 1>, <Entity.POISON: 3>, <Entity.FOOD: 2>)
(<Entity.WALL: 1>, <Entity.POISON: 3>, <Entity.OPEN: 0>)
(<Entity.WALL: 1>, <Entity.POISON: 3>, <Entity.POISON: 3>)
(<Entity.WALL: 1>, <Entity.POISON: 3>, <Entity.WALL: 1>)
(<Entity.WALL: 1>, <Entity.WALL: 1>, <Entity.FOOD: 2>)
(<Entity.WALL: 1>, <Entity.WALL: 1>, <Entity.OPEN: 0>)
(<Entity.WALL: 1>, <Entity.WALL: 1>, <Entity.POISON: 3>)

L/R ambiguity (6):
(<Entity.FOOD: 2>, <Entity.OPEN: 0>, <Entity.FOOD: 2>)
(<Entity.FOOD: 2>, <Entity.POISON: 3>, <Entity.FOOD: 2>)
(<Entity.FOOD: 2>, <Entity.WALL: 1>, <Entity.FOOD: 2>)
(<Entity.OPEN: 0>, <Entity.POISON: 3>, <Entity.OPEN: 0>)
(<Entity.OPEN: 0>, <Entity.WALL: 1>, <Entity.OPEN: 0>)
(<Entity.POISON: 3>, <Entity.WALL: 1>, <Entity.POISON: 3>)

S/F possible (6):
(<Entity.FOOD: 2>, <Entity.FOOD: 2>, <Entity.OPEN: 0>)
(<Entity.FOOD: 2>, <Entity.FOOD: 2>, <Entity.POISON: 3>)
(<Entity.OPEN: 0>, <Entity.FOOD: 2>, <Entity.FOOD: 2>)
(<Entity.OPEN: 0>, <Entity.OPEN: 0>, <Entity.POISON: 3>)
(<Entity.POISON: 3>, <Entity.FOOD: 2>, <Entity.FOOD: 2>)
(<Entity.POISON: 3>, <Entity.OPEN: 0>, <Entity.OPEN: 0>)

L/F/R possible (4):
(<Entity.FOOD: 2>, <Entity.FOOD: 2>, <Entity.FOOD: 2>)
(<Entity.OPEN: 0>, <Entity.OPEN: 0>, <Entity.OPEN: 0>)
(<Entity.POISON: 3>, <Entity.POISON: 3>, <Entity.POISON: 3>)
(<Entity.WALL: 1>, <Entity.WALL: 1>, <Entity.WALL: 1>)

Single wall ambiguity (4):
(<Entity.FOOD: 2>, <Entity.FOOD: 2>, <Entity.WALL: 1>)
(<Entity.OPEN: 0>, <Entity.FOOD: 2>, <Entity.WALL: 1>)
(<Entity.WALL: 1>, <Entity.FOOD: 2>, <Entity.FOOD: 2>)
(<Entity.WALL: 1>, <Entity.FOOD: 2>, <Entity.OPEN: 0>)
